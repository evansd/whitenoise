name: Test Source

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  source:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Use Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements/test-src.txt
      - name: Run Tests
        run: tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)

      - name: Upload coverage data
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: source
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: python -m pip install --upgrade coverage[toml]

      - name: Download data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: Combine coverage and fail if it's <100%
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --fail-under=95

      - name: Upload HTML report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: htmlcov
